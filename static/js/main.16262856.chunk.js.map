{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tab","React","memo","isActive","title","id","setActiveTabId","className","href","onClick","Tabs","tabs","activeTabId","selectedTab","find","tab","map","content","App","useState","ReactDOM","render","document","getElementById"],"mappings":"0MASaA,EAA0BC,IAAMC,MAAK,YAK3C,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,GACAC,EACI,EADJA,eAMA,OACE,oBAAIC,UAAWJ,EAAW,YAAc,GAAI,UAAQ,MAApD,SACE,mBAAGK,KAAI,WAAMH,GAAM,UAAQ,UAAUI,QANlB,WACrBH,EAAeD,IAKb,SACGD,SCnBIM,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAN,EACI,EADJA,eAEMO,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIV,KAAOO,MAAgBD,EAAK,GAErE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,6BACGI,EAAKK,KAAI,SAACD,GAAD,OACR,cAACf,EAAD,CAEEK,GAAIU,EAAIV,GACRD,MAAOW,EAAIX,MACXD,SAAUS,IAAgBG,EAAIV,GAC9BC,eAAgBA,GAJXS,EAAIV,WAUjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACIM,EAAYI,cCpBTN,EAAiB,CAC5B,CAAEN,GAAI,QAASD,MAAO,QAASa,QAAS,eACxC,CAAEZ,GAAI,QAASD,MAAO,QAASa,QAAS,eACxC,CAAEZ,GAAI,QAASD,MAAO,QAASa,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASR,EAAK,GAAGN,IAAvD,mBAAOO,EAAP,KAAoBN,EAApB,KAEMO,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIV,KAAOO,MAAgBD,EAAK,GAErE,OACE,sBAAKJ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBM,EAAYT,SAGlC,cAAC,EAAD,CACEO,KAAMA,EACNC,YAAaA,EACbN,eAAgBA,QCxBxBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.16262856.chunk.js","sourcesContent":["import React from 'react';\n\nexport interface TabProps {\n  isActive: boolean;\n  title: string;\n  id: string;\n  setActiveTabId: (id: string) => void\n}\n\nexport const Tab: React.FC<TabProps> = React.memo(({\n  isActive,\n  title,\n  id,\n  setActiveTabId,\n}) => {\n  const handleTabClick = () => {\n    setActiveTabId(id);\n  };\n\n  return (\n    <li className={isActive ? 'is-active' : ''} data-cy=\"Tab\">\n      <a href={`#${id}`} data-cy=\"TabLink\" onClick={handleTabClick}>\n        {title}\n      </a>\n    </li>\n  );\n});\n","import { Tab } from '../Tab/Tab';\nimport { TabsProps } from '../../utils/types';\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  activeTabId,\n  setActiveTabId,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === activeTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <Tab\n              key={tab.id}\n              id={tab.id}\n              title={tab.title}\n              isActive={activeTabId === tab.id}\n              setActiveTabId={setActiveTabId}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        { selectedTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TabInfo } from './utils/types';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs:TabInfo[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [activeTabId, setActiveTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find(tab => tab.id === activeTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected Tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        activeTabId={activeTabId}\n        setActiveTabId={setActiveTabId}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}