{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tab","isActive","title","id","setActiveTabId","className","type","onClick","tabIndex","href","Tabs","tabs","activeTabId","map","tab","content","App","useState","selectedTab","find","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAA0B,SAAC,GAKjC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,GACAC,EACI,EADJA,eAEA,OACE,oBAAIC,UAAWJ,EAAW,YAAc,GAAI,UAAQ,MAApD,SACE,wBACEK,KAAK,SACLD,UAAU,kBACVE,QAAS,kBAAMH,EAAeD,IAC9BK,SAAU,EAJZ,SAME,mBAAGC,KAAI,WAAMN,GAAM,UAAQ,UAA3B,SACGD,SCfEQ,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAR,EACI,EADJA,eAEA,OACE,qBAAK,UAAQ,gBAAb,SACE,qBAAKC,UAAU,gBAAf,SACE,6BACGM,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAEEX,GAAIW,EAAIX,GACRD,MAAOY,EAAIZ,MACXD,SAAUW,IAAgBE,EAAIX,GAC9BC,eAAgBA,GAJXU,EAAIX,cCPVQ,EAAiB,CAC5B,CAAER,GAAI,QAASD,MAAO,QAASa,QAAS,eACxC,CAAEZ,GAAI,QAASD,MAAO,QAASa,QAAS,eACxC,CAAEZ,GAAI,QAASD,MAAO,QAASa,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASN,EAAK,GAAGR,IAAvD,mBAAOS,EAAP,KAAoBR,EAApB,KAEMc,EAAcP,EAAKQ,MAAK,SAAAL,GAAG,OAAIA,EAAIX,KAAOS,KAEhD,OACE,sBAAKP,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SACGa,EAAW,0BAAsBA,EAAYhB,OAAU,oBAG1D,cAAC,EAAD,CACES,KAAMA,EACNC,YAAaA,EACbR,eAAgBA,IAGlB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGa,EAAcA,EAAYH,QAAU,wBC5B7CK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.abfd1fc3.chunk.js","sourcesContent":["import React from 'react';\nimport { TabProps } from '../../utils/types';\n\nexport const Tab: React.FC<TabProps> = ({\n  isActive,\n  title,\n  id,\n  setActiveTabId,\n}) => {\n  return (\n    <li className={isActive ? 'is-active' : ''} data-cy=\"Tab\">\n      <button\n        type=\"button\"\n        className=\"no-style-button\"\n        onClick={() => setActiveTabId(id)}\n        tabIndex={0}\n      >\n        <a href={`#${id}`} data-cy=\"TabLink\">\n          {title}\n        </a>\n      </button>\n    </li>\n  );\n};\n","import { Tab } from '../Tab/Tab';\nimport { TabsProps } from '../../utils/types';\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  activeTabId,\n  setActiveTabId,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <Tab\n              key={tab.id}\n              id={tab.id}\n              title={tab.title}\n              isActive={activeTabId === tab.id}\n              setActiveTabId={setActiveTabId}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TabInfo } from './utils/types';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs:TabInfo[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [activeTabId, setActiveTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find(tab => tab.id === activeTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTab ? `Selected tab is ${selectedTab.title}` : 'No tab selected'}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        activeTabId={activeTabId}\n        setActiveTabId={setActiveTabId}\n      />\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? selectedTab.content : 'No tab selected'}\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}